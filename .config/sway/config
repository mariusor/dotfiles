# sway config file
#

#set $mod Mod1
set $mod Mod4
#set $TERMINAL alacritty
#set $TERMINAL termite
#set $TERMINAL KITTY_ENABLE_WAYLAND=1 kitty
#set $TERMINAL tilix
set $TERMINAL LANG=en_US.UTF-8 foot -t foot-direct

exec xrdb -merge ~/.Xresources
exec xrdb -merge ~/.Xresources-$(uname -n)

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:Terminus (TTF) 9

# Use Mouse+$mod to drag floating windows to their wanted position
#floating_modifier normal

# start a terminal
#bindsym $mod+Return exec rofi-sensible-terminal
bindsym $mod+Return exec $TERMINAL

# kill focused window
bindsym $mod+Shift+q kill

set $dmenu "bemenu -p '> ' --no-exec --tf '#d7d7d5' --tb '#232729' --scf '#d7d7d5' --scb '#232729' --hf '#d7d7d5' --hb '#232729' --ff '#d7d7d5' --fb '#232729' --nf '#d7d7d5' --nb '#232729' --sb '#585858' --sf '#bcbcbc' --fn 'Terminus (TTF) 12' -i"
#set $dmenu "dmenu -p '> ' -f -nf '#d7d7d5' -nb '#232729' -sb '#585858' -sf '#bcbcbc' -i -fn 'Terminus (TTF):size=12'"
#set $run "rofi -combi-modi drun,run -show combi -modi combi -font 'Terminus (TTF) 12' -show-icons"
#set $run "wofi --show drun,run"
set $run j4-dmenu-desktop --no-generic --use-xdg-de --dmenu=$dmenu
#set $run j4-dmenu-desktop --dmenu=$dmenu
bindsym $mod+grave exec $run | xargs -- swaymsg exec &> /dev/null --
bindsym $mod+Tab exec $run | xargs -- swaymsg exec &> /dev/null --

# clipboard management
bindsym $mod+Shift+c wl-copy
bindsym XF86Paste wl-paste
bindsym $mod+Shift+v exec clipman pick --tool=CUSTOM --tool-args=$dmenu

# password management
bindsym $mod+s exec gopass ls --flat | "$dmenu" | xargs --no-run-if-empty gopass show -o | wl-copy -o -p
bindsym $mod+Shift+s exec gopass ls --flat | "$dmenu" | xargs --no-run-if-empty gopass show | head -n 1 | xargs wlrctl keyboard type

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+period move workspace to output right
bindsym $mod+Shift+apostrophe move workspace to output up
bindsym $mod+Shift+comma move workspace to output left
bindsym $mod+Shift+semicolon move workspace to output down

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+comma layout stacking
bindsym $mod+period layout tabbed
bindsym $mod+slash layout toggle split
#bindsym $mod+apostrophe layout auto_left
#bindsym $mod+semicolon layout auto next
# ANSI layout
#bindsym $mod+backslash layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

set $w1    1:01
set $w2    2:02
set $w3    3:03
set $w4    4:04
set $w5    5:05
set $w6    6:06
set $w7    7:07
set $w8    8:08
set $w9    9:09
set $w10  10:10

# switch to workspace
bindsym $mod+1 workspace  $w1
bindsym $mod+2 workspace  $w2
bindsym $mod+3 workspace  $w3
bindsym $mod+4 workspace  $w4
bindsym $mod+5 workspace  $w5
bindsym $mod+6 workspace  $w6
bindsym $mod+7 workspace  $w7
bindsym $mod+8 workspace  $w8
bindsym $mod+9 workspace  $w9
bindsym $mod+0 workspace $w10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace  $w1
bindsym $mod+Shift+2 move container to workspace  $w2
bindsym $mod+Shift+3 move container to workspace  $w3
bindsym $mod+Shift+4 move container to workspace  $w4
bindsym $mod+Shift+5 move container to workspace  $w5
bindsym $mod+Shift+6 move container to workspace  $w6
bindsym $mod+Shift+7 move container to workspace  $w7
bindsym $mod+Shift+8 move container to workspace  $w8
bindsym $mod+Shift+9 move container to workspace  $w9
bindsym $mod+Shift+0 move container to workspace $w10

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+minus scratchpad show

default_border pixel 2
default_floating_border normal 2

# cycle through border styles
bindsym $mod+b border toggle
# reload the configuration file
bindsym $mod+Shift+r reload
#bindcode Shift+50 exec '~/.local/bin/showkeys.sh'
#bindcode Shift+62 exec '~/.local/bin/showkeys.sh'

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 10px
        bindsym j resize grow height 10px
        bindsym k resize shrink height 10px
        bindsym l resize grow width 10px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# move window (you can also use the mouse for that)
mode "move" {
        # These bindings trigger as soon as you enter the move mode
        bindsym h move left 10px
        bindsym j move down 10px
        bindsym k move up 10px
        bindsym l move right 10px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+m mode "move"

set $volMute exec /usr/bin/pulsemixer --toggle-mute
set $volUP exec /usr/bin/pulsemixer --change-volume +5
set $volDOWN exec /usr/bin/pulsemixer --change-volume -5
# the volume keys need pulsemixer AUR package
bindsym --locked XF86AudioMute $volMute
bindsym --locked XF86AudioRaiseVolume $volUP
bindsym --locked XF86AudioLowerVolume $volDOWN

bindsym --locked XF86AudioMicMute exec /usr/bin/pulseaudio-ctl mute-input

set $mpris_notify notify-send -i "$(mpris-ctl --player active info %art_url)" "$(mpris-ctl --player active info "%play_status")" \
    "$(mpris-ctl --player active info "%artist_name: %track_name\nOn album '%album_name'")"

set $mediaPause exec mpris-ctl --player active --player inactive pp && sleep 1 && $mpris_notify
bindsym --locked $mod+backslash $mediaPause
bindsym --locked XF86AudioPlay exec mpris-ctl --player inactive --player active pp, sleep 1, $mpris_notify
bindsym --locked XF86AudioStop exec mpris-ctl stop, sleep 1, $mpris_notify
bindsym --locked $mod+bracketright exec mpris-ctl next, sleep 1, $mpris_notify
bindsym --locked XF86AudioNext exec mpris-ctl next, sleep 1, $mpris_notify
bindsym --locked $mod+bracketleft exec mpris-ctl prev, sleep 1, $mpris_notify
bindsym --locked XF86AudioPrev exec mpris-ctl prev, sleep 1, $mpris_notify
bindsym $mod + XF86AudioPlay exec $mpris_notify

#set $Light light
set $Light brillo -lqu 100000

bindsym XF86MonBrightnessUp exec $Light -A 3
bindsym XF86MonBrightnessDown exec $Light -U 3

set $swayidle 'swayidle timeout 300 $Locker timeout 600 \'swaymsg "output * dpms off"\' resume \'swaymsg "output * dpms on"\' before-sleep $Locker'
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec mpris-ctl pause, exec $Locker, mode "default"
    bindsym e exec mpris-ctl stop, exec swaymsg exit, mode "default"
    bindsym s exec mpris-ctl pause, exec $Locker, exec systemctl suspend, mode "default"
    bindsym h exec mpris-ctl pause, $Locker, exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    bindsym y exec kill swayidle, mode "default"
    bindsym Shift+y exec $swayidle, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Print mode "$mode_system"
bindsym $mod+equal mode "$mode_system"

bindsym $mod+x [urgent=latest] focus
#bindsym $mod+x [urgent=recent] focus

bindsym $mod+Shift+right workspace next_on_output
bindsym $mod+Shift+left workspace prev_on_output

gaps inner 2
gaps outer 0
gaps top -2
smart_gaps on
smart_borders no_gaps
hide_edge_borders --i3 smart_no_gaps
focus_follows_mouse no
focus_wrapping force
workspace_auto_back_and_forth yes
mouse_warping none

exec "~/.config/wayland.env"
exec_always "~/.local/bin/import-gsettings"
exec_always xsettingsd

seat seat0 xcursor_theme "Vanilla-DMZ-AA"

#include "/etc/sway/config.d/50-systemd-user.conf"
include "conf.d/$(uname -n).config"
include "conf.d/$(uname -n)-$(nmcli -g=NAME,TYPE connection show --active --order +t | grep wireless | cut -d: -f1 | head -n1).config"
include "conf.d/rules"

# Status bar uses custom script
set $ffg #9dbade
set $bg  #323232
set $bgu #323232d0
set $btu #323232d0
set $fg  #ffffff
set $fgu #aaaaaa

#                       border  background  text    indicator   child
#client.unfocused        $bg     $bgu        $fgu      $bgu        $bgu
#client.focused_inactive $bgu    $bgu        $fgu      $bgu        $bgu
#client.focused          $ffg    $bgu        $fg       $bgu        $bgu
client.urgent           $bgu    $bgu        $fg       $bgu        $bgu

focus_on_window_activation urgent

# Start swaybar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    #swaybar_command yambar
    tray_output *
    font pango:Terminus (TTF) 9
    pango_markup enabled
    strip_workspace_numbers yes
    status_command i3status -c ~/.config/i3status/$(uname -n).config
    colors {
        statusline $fg
        background $bgu
        focused_background $bgu
        focused_workspace $bgu $btu $fg
        active_workspace $bgu $bgu $fg
        inactive_workspace $bgu $bgu $fgu
    }
}
#bindsym $mod+BackSpace --release /usr/bin/makoctl dismiss
#bindsym $mod+Shift+BackSpace --release /usr/bin/makoctl dismiss -a
bindsym $mod+y --release /usr/bin/makoctl dismiss
bindsym $mod+Shift+y --release /usr/bin/makoctl dismiss -a
set $mode_print Screen capture (r) region, (s) focused screen
bindsym Print mode "$mode_print"
mode "$mode_print" {
    bindsym r exec ~/.local/bin/swaygrab -r | wl-copy, mode "default"
    bindsym s exec ~/.local/bin/swaygrab -f | wl-copy, mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

exec dex -ae sway
